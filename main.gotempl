package main
import (
    "bytes"
    "fmt"
    "io/ioutil"
    "os"
    "text/template"
    )
func checkError(err error, detail string) {
  if err != nil {
    fmt.Printf("Fatal error %s: %s ", detail, err.Error())
      os.Exit(1)
  }
}
func main() {
  data, err := ioutil.ReadFile("{{.GoTemplate}}")
    checkError(err, "reading template file")
    pipes := NewPipes()
    {{if ne .CustomPipes ""}}
    pipes.Extend(CustomPipes())
    {{end}}
    tmpl, err := template.New("").Funcs(pipes.Map).Parse(string(data))
    checkError(err, "parsing template file")
    var result struct {
      {{if gt (len .GoInputs) 0}}
      {{range .GoInputs}}
      {{.StructName}} {{.StructName}}
      {{end}}
      {{end}}
    }
  {{if gt (len .GoInputs) 0}}
  {{range .GoInputs}}
  result.{{.StructName}} = New{{.StructName}}()
  {{end}}
  {{end}}
  var output bytes.Buffer
    err = tmpl.Execute(&output, result)
    checkError(err, "executing template output")
    fmt.Println(string(output.Bytes()))
}
